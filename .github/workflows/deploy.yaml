name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: yiroma/astro-portfolio

jobs:
  build-and-deploy:
    name: Build and Deploy to Server
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Astro project
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true

      - name: Copy docker-compose.prod.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: "/home/yiroma/web-projects/portfolio/"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Aller dans le répertoire du projet
            cd /home/yiroma/web-projects/portfolio

            # Se connecter au registry GitHub
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

            # Arrêter le conteneur
            docker-compose -f docker-compose.prod.yml down || true

            # Supprimer l'ancienne image latest
            docker rmi ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest || true

            # Utiliser le tag unique du commit (garantit la bonne image)
            COMMIT_SHORT="${{ github.sha }}"
            COMMIT_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${COMMIT_SHORT:0:7}"

            echo "=== Pulling specific commit image: $COMMIT_TAG ==="
            docker pull "$COMMIT_TAG"

            # Re-tagger comme latest pour docker-compose
            docker tag "$COMMIT_TAG" "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

            # Vérifier l'image
            echo "=== IMAGE VERIFICATION ==="
            docker images | grep astro-portfolio
            docker image inspect "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" | grep Created

            # Démarrer le conteneur
            docker-compose -f docker-compose.prod.yml up -d

            # Vérification finale
            sleep 5
            docker exec portfolio-yiroma ls -la /usr/share/nginx/html/_astro/ | head -10

            # Nettoyer
            docker logout ${{ env.REGISTRY }} || true
