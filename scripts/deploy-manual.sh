#!/bin/bash

# Script de d√©ploiement manuel - Portfolio Yiroma
# √Ä ex√©cuter √©tape par √©tape pour comprendre le processus

echo "üöÄ D√©ploiement manuel du portfolio - √âtape par √©tape"

# Variables - √Ä MODIFIER selon votre configuration
SERVER_USER="yiroma"
SERVER_IP="82.67.91.47"  # Remplacez par l'IP de votre serveur
SERVER_PORT="49160"

echo ""
echo "üìã Configuration actuelle :"
echo "  ‚Ä¢ Serveur: $SERVER_USER@$SERVER_IP -p $SERVER_PORT"
echo "  ‚Ä¢ Dossier cible: /home/$SERVER_USER/web-projects/portfolio"
echo ""

# Couleurs pour les √©tapes
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}=== √âTAPE 1 : Test de connexion SSH ===${NC}"
echo "Test de la connexion..."
if ssh -o ConnectTimeout=5 "$SERVER_USER@$SERVER_IP" -p $SERVER_PORT "echo 'Connexion OK'" 2>/dev/null; then
    echo -e "${GREEN}‚úì Connexion SSH r√©ussie${NC}"
else
    echo -e "${YELLOW}‚ùå Connexion SSH √©chou√©e${NC}"
    echo "V√©rifiez :"
    echo "  ‚Ä¢ L'IP du serveur dans ce script"
    echo "  ‚Ä¢ Que SSH est configur√©"
    echo "  ‚Ä¢ Que le serveur est allum√©"
    exit 1
fi

echo ""
echo -e "${BLUE}=== √âTAPE 2 : Cr√©ation de la structure sur le serveur ===${NC}"
ssh "$SERVER_USER@$SERVER_IP" -p $SERVER_PORT << 'EOF'
    # Cr√©er les r√©pertoires n√©cessaires
    mkdir -p /home/yiroma/web-projects/portfolio
    mkdir -p /home/yiroma/web-projects/nginx/sites-available
    mkdir -p /home/yiroma/web-projects/nginx/sites-enabled
    
    echo "‚úì Structure cr√©√©e sur le serveur"
EOF

echo ""
echo -e "${BLUE}=== √âTAPE 3 : Synchronisation des fichiers ===${NC}"
echo "Copie des fichiers du projet..."

# Synchroniser les fichiers n√©cessaires
rsync -avz -e "ssh -p $SERVER_PORT" \
    --exclude 'node_modules/' \
    --exclude '.git/' \
    --exclude 'dist/' \
    --exclude '.astro/' \
    --exclude '*.log' \
    ./ "$SERVER_USER@$SERVER_IP:/home/$SERVER_USER/web-projects/portfolio/"

echo -e "${GREEN}‚úì Fichiers copi√©s${NC}"

echo ""
echo -e "${BLUE}=== √âTAPE 4 : V√©rification Docker sur le serveur ===${NC}"
ssh "$SERVER_USER@$SERVER_IP" -p $SERVER_PORT << 'EOF'
    if command -v docker &> /dev/null; then
        echo "‚úì Docker est install√©"
        docker --version
    else
        echo "‚ùå Docker n'est pas install√© sur le serveur"
        exit 1
    fi
    
    if command -v docker-compose &> /dev/null || docker compose version &> /dev/null; then
        echo "‚úì Docker Compose est disponible"
    else
        echo "‚ùå Docker Compose n'est pas disponible"
        exit 1
    fi
EOF

echo ""
echo -e "${BLUE}=== √âTAPE 5 : D√©ploiement sur le serveur ===${NC}"
ssh "$SERVER_USER@$SERVER_IP" -p $SERVER_PORT << EOF
    cd /home/$SERVER_USER/web-projects/portfolio
    
    # Cr√©er le r√©seau web-projects s'il n'existe pas
    docker network create web-projects 2>/dev/null || echo "R√©seau web-projects existe d√©j√†"
    
    # Construire et lancer le conteneur
    echo "Construction de l'image Docker..."
    docker-compose up --build -d
    
    # V√©rifier que √ßa fonctionne
    sleep 5
    if docker-compose ps | grep -q "Up"; then
        echo "‚úÖ Conteneur d√©marr√© avec succ√®s!"
        echo "Portfolio accessible sur: http://$SERVER_IP:3001"
    else
        echo "‚ùå Probl√®me avec le conteneur"
        docker-compose logs
        exit 1
    fi
EOF

echo ""
echo -e "${GREEN}üéâ D√©ploiement termin√© !${NC}"
echo ""
echo "üìã V√©rifications :"
echo "  ‚Ä¢ Portfolio: http://$SERVER_IP:3001"
echo "  ‚Ä¢ Logs: ssh $SERVER_USER@$SERVER_IP -p $SERVER_PORT 'cd /home/$SERVER_USER/web-projects/portfolio && docker-compose logs'"
echo ""
echo "üîß Prochaine √©tape : Configuration nginx reverse proxy"
echo "  (nous ferons √ßa ensemble dans l'√©tape suivante)" 